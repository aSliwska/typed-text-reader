classdef TextRecognizer
    methods
        function resultText = recognize(obj, paragraphs, recognizerValues)
            extractedLines = [];

            
            for j = 1:numel(paragraphs)
                images=paragraphs{j}.images;
                flags=paragraphs{j}.flags;
    
                % disp(images);
                % load("trainedModel_11_epochs_advanced.mat", 'net');
                load('trainedModel.mat', 'net');
    
                for i = 1:numel(images)
                    if (flags(i) == 1)
                        textArray = strcat(textArray, " ");
                    end
                    inputImage = images{i};
    
                    % Upewnij siÄ™ czy wymiary sÄ… poprawne
                    inputImage = reshape(inputImage, [32, 32, 1]);
    
                    predictedLabel = classify(net, inputImage);
                    predictedChar = char(str2double(char (predictedLabel)));
                    textArray = strcat(textArray, predictedChar);
                    % disp(flags(i));
                    if (flags(i) == 2)
                        extractedLines(end + 1) = textArray
                        textArray="";
                    end
                       
                end
                textArray = strcat(textArray, newline);
            end
            % ZwrÃ³Ä‡ wynik
            resultText = textArray;
        end
    end
end


% classdef TextRecognizer
%     methods
%         function resultText = recognize(obj, someInput, recognizerValues)
%
%             % if something goes wrong you'll get zeros
%             % in the recognizerValues cell array (but it shouldn't lol)
%
%             % for now it'll be easier for you to edit what you get if you
%             % get a whole cell array, but once you tell me exactly what fields
%             % you'd like to have, then you won't have to map like this:
%
%             slider3_value = recognizerValues{1};
%             slider4_value = recognizerValues{2};
%             editfield_value = recognizerValues{3};
%             doubleslider_value_min = recognizerValues{4}(1);
%             doubleslider_value_max = recognizerValues{4}(2);
%
%             % idk what input you'll get from the separator, sorry
%             someInput;
%
%
%             textArray = {'this is ' '   some text' '' 'mind the lack of commas in matlab arrays ðŸ˜’'};
%
%             % define return value
%             resultText = textArray;
%         end
%     end
% end